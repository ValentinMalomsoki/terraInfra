name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3 

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    #- name: Terraform Format
    #  run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env: 
        TF_VAR_name: val
      run: terraform plan -input=false -out plan.out

    - name: Write Plan summary
      run: terraform show plan.out -no-color >> $GITHUB_STEP_SUMMARY

    - name: Upload plan
      uses: actions/upload-artifact@v4
      with:
        name: plan.out
        path: plan.out
        retention-days: 5

  applyPlan:
    name: 'apply plan'
    runs-on: self-hosted
    environment: $GITHUB_REF_NAME
    needs: terraform

    defaults:
      run:
        shell: bash

    steps:
    - name: Download plan
      uses: actions/download-artifact@v4
      with:
        name: plan.out
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      
    - name: Terraform Apply
      run: terraform apply -input=false plan.out
